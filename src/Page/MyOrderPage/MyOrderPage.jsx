import React, { useState, useEffect } from 'react';
import './MyOrderPage.scss';

function MyOrderPage() {
  const [orders, setOrders] = useState([]);
  const [tables, setTables] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [currentTable, setCurrentTable] = useState(null);
  const [latestOrder, setLatestOrder] = useState(null);
  const [tableInfo, setTableInfo] = useState(null);

  // Status t…ôrc√ºm…ôl…ôri
  const statusTranslations = {
    empty: "Bo≈ü",
    reserved: "Rezerv",
    waitingFood: "Yem…ôk g√∂zl…ôyir",
    waitingWaiter: "Ofisiant g√∂zl…ôyir",
    waitingBill: "Hesab g√∂zl…ôyir",
    sendOrder: "Sifari≈ü g√∂nd…ôrildi",
    sendKitchen: "Yem…ôk m…ôtb…ôx…ô g√∂nd…ôrildi",
    makeFood: "Yem…ôk hazƒ±rlanƒ±r",
    deliveredFood: "Yem…ôk t…ôhvil verildi"
  };

  useEffect(() => {
    // LocalStorage-dan m…ôlumatlarƒ± oxu
    const tableNumber = localStorage.getItem('table');
    setCurrentTable(tableNumber ? parseInt(tableNumber) : null);

    const fetchData = async () => {
      try {
        setLoading(true);
        
        // Masalar m…ôlumatƒ±nƒ± al
        const tablesResponse = await fetch('http://172.20.5.167:8001/api/tables/');
        if (!tablesResponse.ok) {
          throw new Error('Masalar API cavab verm…ôdi');
        }
        const tablesData = await tablesResponse.json();
        setTables(tablesData);
        
        // Sifari≈ü m…ôlumatlarƒ±nƒ± al
        const ordersResponse = await fetch('http://172.20.5.167:8001/api/baskets/');
        if (!ordersResponse.ok) {
          throw new Error('Sifari≈ül…ôr API cavab verm…ôdi');
        }
        const ordersData = await ordersResponse.json();
        setOrders(ordersData);
        
        // Cari masa √º√ß√ºn m…ôlumatlarƒ± t…ôyin et
        if (tableNumber) {
          const tableNum = parseInt(tableNumber);
          
          // Masalar arasƒ±nda cari masanƒ± tap
          const currentTableInfo = tablesData.find(table => table.table_num === tableNum);
          setTableInfo(currentTableInfo);
          
          // Cari masa √º√ß√ºn sifari≈ül…ôri filtrl…ô v…ô …ôn son sifari≈üi tap
          const tableOrders = ordersData.filter(order => 
            order.table && order.table.table_num === tableNum
          );
          
          if (tableOrders.length > 0) {
            // Tarix…ô g√∂r…ô sƒ±rala (…ôn yeni √ºst…ô)
            tableOrders.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            setLatestOrder(tableOrders[0]);
          }
        }
      } catch (err) {
        setError(err.message);
        console.error('X…ôta ba≈ü verdi:', err);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  const handleNewOrder = () => {
    // Burada yeni sifari≈ü s…ôhif…ôsin…ô y√∂nl…ôndirm…ô ed…ô bil…ôrsiniz
    alert('Yeni sifari≈ü verilm…ôsi √º√ß√ºn s…ôhif…ôy…ô y√∂nl…ôndirilirsiniz...');
    // window.location.href = '/new-order'; // Y√∂nl…ôndirm…ô √º√ß√ºn
  };

  if (loading) {
    return (
      <div className="my-order-page">
        <div className="loading">
          <div className="spinner"></div>
          <p>Y√ºkl…ônir...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="my-order-page">
        <div className="error">
          <h3>X…ôta ba≈ü verdi</h3>
          <p>{error}</p>
        </div>
      </div>
    );
  }

  return (
    <div className="my-order-page">
      <div className="order-header">
        <div className="header-content">
          <h1>Masa M…ôlumatlarƒ±</h1>
          {currentTable && tableInfo && (
            <div className="table-info">
              <span className="table-number">Masa {currentTable}</span>
              <span className="chair-count">{tableInfo.chair_number} n…ôf…ôrlik</span>
            
            </div>
          )}
        </div>
      </div>

      <div className="order-content">
        {!currentTable ? (
          <div className="no-table-info">
            <div className="icon">üçΩÔ∏è</div>
            <h3>Masa m…ôlumatƒ± tapƒ±lmadƒ±</h3>
            <p>Z…ôhm…ôt olmasa masa n√∂mr…ôsini daxil edin.</p>
          </div>
        ) : !tableInfo ? (
          <div className="no-table-info">
            <div className="icon">‚ùì</div>
            <h3>Masa tapƒ±lmadƒ±</h3>
            <p>Masa {currentTable} √º√ß√ºn m…ôlumat tapƒ±lmadƒ±.</p>
          </div>
        ) : (
          <>
            {latestOrder ? (
              <div className="latest-order">
                <div className="order-card">
                  <div className="order-header-info">
                    <div className="order-id">Sifari≈ü ‚Ññ{latestOrder.id}</div>
                    <div className="order-date">
                      {new Date(latestOrder.created_at).toLocaleString('az-AZ')}
                    </div>
                    <div className={`status status-${latestOrder.table.status}`}>
                      {statusTranslations[latestOrder.table.status] || latestOrder.table.status}
                    </div>
                  </div>


                  {latestOrder.items && latestOrder.items.length > 0 ? (
                    <>
                      <div className="order-items">
                        <h3>Sifari≈ü edil…ônl…ôr:</h3>
                        {latestOrder.items.map(item => (
                          <div key={item.id} className="order-item">
                            <div className="item-info">
                              <span className="item-name">{item.name_az}</span>
                              <span className="item-quantity">x {item.count}</span>
                            </div>
                            <div className="item-details">
                              <span className="item-description">{item.description_az}</span>
                              <span className="item-price">{item.cost} AZN</span>
                            </div>
                          </div>
                        ))}
                      </div>

                      <div className="order-summary">
                        <div className="summary-row">
                          <span>Xidm…ôt haqqƒ±:</span>
                          <span>{latestOrder.service_cost} AZN</span>
                        </div>
                        <div className="summary-row total">
                          <span>√úmumi m…ôbl…ôƒü:</span>
                          <span>{latestOrder.total_cost} AZN</span>
                        </div>
                        <div className="summary-row">
                          <span>Hazƒ±rlanma vaxtƒ±:</span>
                          <span>{latestOrder.total_time} d…ôqiq…ô</span>
                        </div>
                      </div>
                    </>
                  ) : (
                    <div className="no-items">Sifari≈üd…ô he√ß bir m…ôhsul yoxdur.</div>
                  )}
                </div>
              </div>
            ) : (
              <div className="no-orders">
                <div className="icon">üìù</div>
                <h3>He√ß bir sifari≈ü tapƒ±lmadƒ±</h3>
                <p>Masa {currentTable} √º√ß√ºn he√ß bir sifari≈ü yoxdur.</p>
              </div>
            )}

            <div className="order-actions">
              <button className="order-button primary" onClick={handleNewOrder}>
                <span className="icon">+</span>
                ∆èlav…ô yem…ôk sifari≈ü ver
              </button>
              
              <button className="order-button secondary">
                Ofisiant √ßaƒüƒ±r
              </button>

              <button className="order-button secondary">
                Hesab t…ôl…ôb et
              </button>
            </div>
          </>
        )}
      </div>
    </div>
  );
}

export default MyOrderPage;